{"version":3,"file":"ledyer-payments.min.js","mappings":"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","sources":["webpack://ledyer-payments-for-woocommerce/./src/assets/js/ledyer-payments.js"],"sourcesContent":["jQuery( function ( $ ) {\n    if ( typeof LedyerPaymentsParams === \"undefined\" ) {\n        return false\n    }\n\n    const LedyerPayments = {\n        params: LedyerPaymentsParams,\n        gatewayId: LedyerPaymentsParams.gatewayId,\n        sessionId: LedyerPaymentsParams.sessionId,\n        i18n: {},\n\n        init: () => {\n            $( \"body\" ).on( \"click\", \"input#place_order, button#place_order\", ( e ) => {\n                // Do not allow a purchase to go through if ANY error occurs.\n                try {\n                    if ( ! LedyerPayments.isActiveGateway() ) {\n                        return\n                    }\n\n                    const organizationNumber = $( \"#billing_company_number\" ).val().trim()\n                    if ( organizationNumber.length === 0 ) {\n                        LedyerPayments.printNotice( LedyerPayments.params.i18n.companyNumberMissing )\n                        return false\n                    }\n\n                    LedyerPayments.submitOrder( e )\n                } catch ( error ) {\n                    LedyerPayments.printNotice( LedyerPayments.params.i18n.genericError )\n                    console.error( error )\n                    return false\n                }\n            } )\n\n            $( document ).ready( () => {\n                // If \"billing_form\", remove the fields from the payment_form and insert it after the company name field. Otherwise, if it is \"payment_form\", leave as-is.\n                if ( LedyerPayments.params.companyFieldsPlacement === \"billing_form\" ) {\n                    if ( LedyerPayments.isActiveGateway() ) {\n                        $( \"#billing_company_number_field\" ).remove()\n                        $( \"#ledyer_customer_reference_1_field\" ).remove()\n                        $( \"#ledyer_customer_reference_2_field\" ).remove()\n                    }\n\n                    // Required whenever the customer changes payment method.\n                    $( \"body\" ).on( \"change\", 'input[name=\"payment_method\"]', LedyerPayments.moveCompanyNumberField )\n                    // Required when the checkout is initially loaded, and Ledyer is the chosen gateway.\n                    $( \"body\" ).on( \"updated_checkout\", LedyerPayments.moveCompanyNumberField )\n                }\n\n                // Make the company name field required if Ledyer is the chosen gateway.\n                LedyerPayments.toggleCheckoutField()\n                $( \"body\" ).on( \"change\", 'input[name=\"payment_method\"]', LedyerPayments.toggleCheckoutField )\n                $( \"body\" ).on( \"updated_checkout\", LedyerPayments.toggleCheckoutField )\n            } )\n        },\n\n        /**\n         * Moves the extra company fields to the billing form or leaves in the payment method.\n         * @returns {void}\n         */\n        moveCompanyNumberField: () => {\n            if ( LedyerPayments.params.companyFieldsPlacement === \"billing_form\" ) {\n                if ( LedyerPayments.isActiveGateway() ) {\n                    $( \"#billing_company_number_field\" ).detach().insertAfter( \"#billing_company_field\" ).show()\n                    $( \"#ledyer_customer_reference_1_field\" )\n                        .detach()\n                        .insertAfter( \"#billing_company_number_field\" )\n                        .show()\n                    $( \"#ledyer_customer_reference_2_field\" )\n                        .detach()\n                        .insertAfter( \"#ledyer_customer_reference_1_field\" )\n                        .show()\n                } else {\n                    $( \"#billing_company_number_field\" ).hide()\n                    $( \"#ledyer_customer_reference_1_field\" ).hide()\n                    $( \"#ledyer_customer_reference_2_field\" ).hide()\n                }\n            }\n        },\n\n        /**\n         * Toggles the company name field between required and optional.\n         * @returns {void}\n         */\n        toggleCheckoutField: () => {\n            if ( LedyerPayments.isActiveGateway() ) {\n                LedyerPayments.makeCheckoutFieldRequired( \"billing_company_field\" )\n                $( \"#ledyer_customer_reference_1_field\" ).show()\n                $( \"#ledyer_customer_reference_2_field\" ).show()\n            } else {\n                LedyerPayments.makeCheckoutFieldOptional( \"billing_company_field\", false )\n                $( \"#ledyer_customer_reference_1_field\" ).hide()\n                $( \"#ledyer_customer_reference_2_field\" ).hide()\n            }\n        },\n\n        /**\n         * Makes a checkout field required.\n         * @param {string} id - The ID of the field.\n         * @returns {void}\n         */\n        makeCheckoutFieldRequired: ( id ) => {\n            const i18n = LedyerPayments.i18n.required ?? $( \".required\" ).first().text()\n            if ( i18n.length === 0 ) {\n                // None of the fields are optional, there is nothing to do.\n                return false\n            } else {\n                // Save the i18n for later use.\n                LedyerPayments.i18n.required = i18n\n            }\n\n            const field = $( `#${ id }` )\n\n            const input = field.find( \"input\" ).first()\n            if ( input.attr( \"aria-required\" ) === \"true\" || input.attr( \"required\" ) === \"true\" ) {\n                // The field is already required.\n                return false\n            }\n\n            // Set a flag to determine whether the field was optional before.\n            field.attr( \"data-optional\", \"true\" )\n\n            // Make the input field required.\n            input.attr( \"aria-required\", \"true\" )\n            input.attr( \"required\", \"true\" )\n\n            // Remove the optional label.\n            const label = field.find( \"label\" ).first()\n            label.find( \".optional\" ).remove()\n\n            // Add the required label.\n            let clone = $( \".required\" ).first()\n            if ( clone.length === 0 ) {\n                // No required field exists. Let us make some assumption and create one.\n                clone = $.parseHTML( `<abbr class=\"required\" title=\"required\">${ i18n }</abbr>` )\n            } else {\n                clone = clone.clone()\n            }\n            label.append( clone )\n        },\n\n        /**\n         * Makes a checkout field optional.\n         * @param {string} id - The ID of the field.\n         * @param {boolean} restore - Whether to restore the field to optional.\n         * @returns {void}\n         */\n        makeCheckoutFieldOptional: ( id, restore = true ) => {\n            const i18n = LedyerPayments.i18n.optional ?? $( \".optional\" ).first().text()\n            if ( i18n.length === 0 ) {\n                // None of the fields are required, there is nothing to do.\n                return false\n            } else {\n                // Save the i18n for later use.\n                LedyerPayments.i18n.optional = i18n\n            }\n\n            const field = $( `#${ id }` )\n            if ( ! field.attr( \"data-optional\" ) && ! restore ) {\n                // If restore is false, we won't restore the field to optional.\n                return false\n            }\n\n            if ( field.find( \".required\" ).length === 0 ) {\n                // The field is already optional.\n                return false\n            }\n\n            // Make the input field optional.\n            const input = field.find( \"input\" ).first()\n            input.attr( \"aria-required\", \"false\" )\n            input.attr( \"required\", \"false\" )\n\n            // Remove the required label.\n            const label = field.find( \"label\" ).first()\n            label.find( \".required\" ).remove()\n\n            // Add the optional label.\n            let el = $( \".optional\" ).first()\n            if ( el.length === 0 ) {\n                // No optional field exists. Let us make some assumption and create one.\n                el = $.parseHTML( `<span class=\"optional\">${ i18n }</span>` )\n            } else {\n                el = el.clone()\n            }\n            label.append( el )\n        },\n\n        /**\n         * Handles the process of proceeding with Ledyer payment for an order.\n         *\n         * @param {string} orderId - The key of the order.\n         * @param {Object} customerData - The customer data.\n         * @returns {void}\n         */\n        handleProceedWithLedyer: async ( orderId, customerData ) => {\n            try {\n                LedyerPayments.blockUI()\n\n                const authArgs = { customer: { ...customerData }, sessionId: LedyerPayments.sessionId }\n                const authResponse = await window.ledyer.payments.api.authorize( authArgs )\n\n                if ( authResponse.state === \"authorized\" ) {\n                    LedyerPayments.createOrder( authResponse, orderId )\n                } else if ( authResponse.state === \"awaitingSignatory\" ) {\n                    LedyerPayments.createPendingOrder( authResponse, orderId )\n                }\n            } catch ( error ) {\n                console.error( error )\n            } finally {\n                LedyerPayments.unblockUI()\n            }\n        },\n\n        /**\n         * Prints a notice on the checkout page.\n         * @param {string} message - The message to be displayed.\n         * @returns {void}\n         */\n        printNotice: ( message ) => {\n            const elementId = `${ LedyerPayments.gatewayId }-error-notice`\n\n            // Remove any existing notice that we have created. This won't remove the default WooCommerce notices.\n            $( `#${ elementId }` ).remove()\n\n            const html = `<div id='${ elementId }' class='woocommerce-NoticeGroup'><ul class='woocommerce-error' role='alert'><li>${ message }</li></ul></div>`\n            $( \"form.checkout\" ).prepend( html )\n\n            document.getElementById( elementId ).scrollIntoView( { behavior: \"smooth\" } )\n        },\n\n        /**\n         * Logs a message to the server.\n         * @param {string} message - The message to be logged.\n         * @param {string} level - The log level. Default is \"notice\".\n         * @returns {void}\n         */\n        logToFile: ( message, level = \"notice\" ) => {\n            const { logToFileUrl, logToFileNonce, reference } = LedyerPayments.params\n            console.debug( message )\n\n            $.ajax( {\n                url: logToFileUrl,\n                type: \"POST\",\n                dataType: \"json\",\n                data: {\n                    level,\n                    reference,\n                    message: message,\n                    nonce: logToFileNonce,\n                },\n            } )\n        },\n\n        /**\n         * Unblocks the UI.\n         * @returns {void}\n         */\n        unblockUI: () => {\n            $( \".woocommerce-checkout-review-order-table\" ).unblock()\n            $( \"form.checkout\" ).removeClass( \"processing\" ).unblock()\n        },\n\n        /**\n         * Blocks the UI.\n         * @returns {void}\n         */\n        blockUI: () => {\n            /* Order review. */\n            $( \".woocommerce-checkout-review-order-table\" ).block( {\n                message: null,\n                overlayCSS: {\n                    background: \"#fff\",\n                    opacity: 0.6,\n                },\n            } )\n\n            $( \"form.checkout\" ).addClass( \"processing\" )\n            $( \"form.checkout\" ).block( {\n                message: null,\n                overlayCSS: {\n                    background: \"#fff\",\n                    opacity: 0.6,\n                },\n            } )\n        },\n\n        /**\n         * Checks if the Ledyer Payments is current gateway.\n         * @returns {boolean} - True if current gateway, false otherwise.\n         */\n        isActiveGateway: () => {\n            if ( $( 'input[name=\"payment_method\"]:checked' ).length ) {\n                const currentGateway = $( 'input[name=\"payment_method\"]:checked' ).val()\n                return currentGateway.indexOf( LedyerPayments.gatewayId ) >= 0\n            }\n\n            return false\n        },\n\n        /**\n         * Update the nonce values.\n         *\n         * This is required when a guest user is logged in and the nonce values are updated since the nonce is associated with the user ID (0 for guests).\n         *\n         * @param {object} nonce An object containing the new nonce values.\n         * @returns {void}\n         */\n        updateNonce: ( nonce ) => {\n            for ( const key in nonce ) {\n                if ( key in LedyerPayments.params ) {\n                    LedyerPayments.params[ key ] = nonce[ key ]\n                }\n            }\n        },\n\n        /**\n         * Handles failure to create WooCommerce order.\n         *\n         * @param {string} error - The error message.\n         * @param {string} message - The message to be displayed.\n         * @returns {void}\n         */\n        submitOrderFail: ( error, message ) => {\n            console.debug( \"[%s] Woo failed to create the order. Reason: %s\", error, message )\n\n            LedyerPayments.unblockUI()\n            $( document.body ).trigger( \"checkout_error\" )\n            $( document.body ).trigger( \"update_checkout\" )\n\n            // update_checkout clears notice.\n            LedyerPayments.printNotice( message )\n        },\n\n        /**\n         * Submits the checkout form to WooCommerce for order creation.\n         *\n         * @param {Event} e - The event object.\n         * @returns {void}\n         */\n        submitOrder: ( e ) => {\n            if ( $( \"form.checkout\" ).is( \".processing\" ) ) {\n                return false\n            }\n\n            e.preventDefault()\n            LedyerPayments.blockUI()\n\n            const { submitOrderUrl } = LedyerPayments.params\n            $.ajax( {\n                type: \"POST\",\n                url: submitOrderUrl,\n                data: $( \"form.checkout\" ).serialize(),\n                dataType: \"json\",\n                success: async ( data ) => {\n                    try {\n                        if ( data.nonce ) {\n                            LedyerPayments.updateNonce( data.nonce )\n                        }\n\n                        if ( \"success\" === data.result ) {\n                            const { order_key: orderId, customer } = data\n\n                            LedyerPayments.logToFile(\n                                `Successfully placed order ${ orderId }. Sending \"shouldProceed: true\".`,\n                            )\n\n                            LedyerPayments.handleProceedWithLedyer( orderId, customer )\n                        } else {\n                            console.warn( \"AJAX request succeeded, but the Woo order was not created.\", data )\n                            throw \"SubmitOrder failed\"\n                        }\n                    } catch ( err ) {\n                        console.error( err )\n                        if ( data.messages ) {\n                            // Strip HTML code from messages.\n                            const messages = data.messages.replace( /<\\/?[^>]+(>|$)/g, \"\" )\n\n                            LedyerPayments.logToFile( \"Checkout error | \" + messages, \"error\" )\n                            LedyerPayments.submitOrderFail( \"submitOrder\", messages )\n                        } else {\n                            LedyerPayments.logToFile( \"Checkout error | No message\", \"error\" )\n                            LedyerPayments.submitOrderFail( \"submitOrder\", \"Checkout error\" )\n                        }\n                    }\n                },\n                error: ( data ) => {\n                    try {\n                        LedyerPayments.logToFile( \"AJAX error | \" + JSON.stringify( data ), \"error\" )\n                    } catch ( e ) {\n                        LedyerPayments.logToFile( \"AJAX error | Failed to parse error message.\", \"error\" )\n                    }\n                    LedyerPayments.submitOrderFail( \"AJAX\", \"Something went wrong, please try again.\" )\n                },\n            } )\n        },\n\n        /**\n         * Informs Ledyer to proceed with creating the order in their system.\n         *\n         * This is done after the payment has been authorized, and we've verified that the order was created in WooCommerce.\n         *\n         * @throws {Error} If the authResponse state is not \"authorized\".\n         *\n         * @param {object} authResponse The response from the authorization request.\n         * @param {string} orderId The WC order ID.\n         * @returns {void}\n         */\n        createOrder: ( authResponse, orderId ) => {\n            if ( authResponse.state !== \"authorized\" ) {\n                throw new Error(\n                    `createOrder was called with an invalid state. Received ${ authResponse.state }, expected 'authorized'.`,\n                )\n            }\n\n            const authToken = authResponse.authorizationToken\n            const { state } = authResponse\n            const { createOrderUrl, createOrderNonce } = LedyerPayments.params\n\n            $.ajax( {\n                type: \"POST\",\n                url: createOrderUrl,\n                dataType: \"json\",\n                data: {\n                    state,\n                    order_key: orderId,\n                    auth_token: authToken,\n                    nonce: createOrderNonce,\n                },\n                async: false,\n                success: ( data ) => {\n                    if ( ! data.success ) {\n                        LedyerPayments.submitOrderFail(\n                            \"createOrder\",\n                            \"The payment was successful, but the order could not be created.\",\n                        )\n\n                        return\n                    }\n\n                    const {\n                        data: { location },\n                    } = data\n                    window.location = location\n                },\n                error: ( jqXHR, textStatus, errorThrown ) => {\n                    console.debug( \"Error:\", textStatus, errorThrown )\n                    console.debug( \"Response:\", jqXHR.responseText )\n\n                    console.error( errorThrown )\n                    LedyerPayments.submitOrderFail(\n                        \"createOrder\",\n                        \"The payment was successful, but the order could not be created.\",\n                    )\n                },\n            } )\n        },\n\n        /**\n         * Informs Ledyer to proceed with creating the pending payment order in their system.\n         *\n         * This is done after the payment has been authorized, and we've verified that the order was created in WooCommerce.\n         *\n         * @throws {Error} If the authResponse state is not \"awaitingSignatory\".\n         *\n         * @param {string} orderId The WC order ID.\n         * @returns {void}\n         */\n        createPendingOrder: ( authResponse, orderId ) => {\n            if ( authResponse.state !== \"awaitingSignatory\" ) {\n                throw new Error(\n                    `createPendingOrder was called with an invalid state. Received ${ authResponse.state }, expected 'awaitingSignatory'.`,\n                )\n            }\n\n            const { pendingPaymentUrl, pendingPaymentNonce } = LedyerPayments.params\n\n            $.ajax( {\n                type: \"POST\",\n                url: pendingPaymentUrl,\n                dataType: \"json\",\n                data: {\n                    order_key: orderId,\n                    nonce: pendingPaymentNonce,\n                },\n                async: false,\n                success: ( data ) => {\n                    if ( ! data.success ) {\n                        LedyerPayments.submitOrderFail(\n                            \"pendingPayment\",\n                            \"The payment is pending payment. Failed to redirect to order received page.\",\n                        )\n\n                        return\n                    }\n\n                    const {\n                        data: { location },\n                    } = data\n                    window.location = location\n                },\n                error: ( jqXHR, textStatus, errorThrown ) => {\n                    console.debug( \"Error:\", textStatus, errorThrown )\n                    console.debug( \"Response:\", jqXHR.responseText )\n\n                    LedyerPayments.submitOrderFail(\n                        \"pendingPayment\",\n                        \"The payment is pending payment. Failed to redirect to order received page.\",\n                    )\n                },\n            } )\n        },\n    }\n\n    LedyerPayments.init()\n} )\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","_toPrimitive","_toPropertyKey","asyncGeneratorStep","_asyncToGenerator","_next","_throw","jQuery","$","LedyerPaymentsParams","_handleProceedWithLedyer","LedyerPayments","params","gatewayId","sessionId","i18n","init","on","isActiveGateway","val","trim","printNotice","companyNumberMissing","submitOrder","error","genericError","console","document","ready","companyFieldsPlacement","remove","moveCompanyNumberField","toggleCheckoutField","detach","insertAfter","show","hide","makeCheckoutFieldRequired","makeCheckoutFieldOptional","id","_LedyerPayments$i18n$","required","first","text","field","concat","input","find","attr","label","clone","parseHTML","append","_LedyerPayments$i18n$2","restore","undefined","optional","el","handleProceedWithLedyer","_callee","orderId","customerData","authArgs","authResponse","_t","_context","blockUI","customer","window","ledyer","payments","api","authorize","state","createOrder","createPendingOrder","unblockUI","_x","_x2","message","elementId","html","prepend","getElementById","scrollIntoView","behavior","logToFile","level","_LedyerPayments$param","logToFileUrl","logToFileNonce","reference","debug","ajax","url","dataType","data","nonce","unblock","removeClass","block","overlayCSS","background","opacity","addClass","indexOf","updateNonce","key","submitOrderFail","body","trigger","is","preventDefault","_success","submitOrderUrl","serialize","success","_callee2","messages","_t2","_context2","result","order_key","warn","replace","_x3","JSON","stringify","authToken","authorizationToken","_LedyerPayments$param2","createOrderUrl","createOrderNonce","auth_token","location","jqXHR","textStatus","errorThrown","responseText","_LedyerPayments$param3","pendingPaymentUrl","pendingPaymentNonce"],"sourceRoot":""}